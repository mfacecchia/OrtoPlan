// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  userID String @id @db.Char(26)
  name String
  surname String

  // NOTE: Foreign key "links"
  credential Credentials[]
  plantation Plantation[]
  notification Notification[]
  treatment PlannedTreatment[]
}

model Credentials {
  email String @id
  password String
  githubID String?
  googleID String?
  userID String @unique @db.Char(26)
  // NOTE: Foreign key (1:N relation with `User` table)
  user User @relation(fields: [userID], references: [userID], onDelete: Cascade)
}

model Notification{
  notificationID Int @id @default(autoincrement())
  message String
  notificationType String
  notificationIcon String @default("warning_green.svg")
  userID String @db.Char(26)

  user User @relation(fields: [userID], references: [userID], onDelete: Cascade)
}

model Plantation {
  plantationID Int @id @default(autoincrement())
  location String?
  locationCAP String? @db.Char(5)
  userID String @db.Char(26)
  
  user User @relation(fields: [userID], references: [userID], onDelete: Cascade)

  plantation_plant Plantation_Plant[]
  weather Weather[]
}

model Weather {
  forecastID Int @id @default(autoincrement())
  description String
  date Unsupported("date")
  rainMm Float
  rainProbability Float
  maxTemp Float
  minTemp Float
  windSpeed Float
  windDirection String
  sunrise Unsupported("time")
  sundown Unsupported("time")
  weatherIcon String
  plantationID Int

  plantation Plantation @relation(fields: [plantationID], references: [plantationID], onDelete: Cascade)
}

model Plant {
  plantID Int @id @default(autoincrement())
  plantName String
  plantFamily String?
  plantDescription String?
  scientificName String
  imageURL String @db.VarChar(500) @default("plant.webp")

  plantation_plant Plantation_Plant[]
  treatment PlannedTreatment[]
}

model PlannedTreatment {
  userID String @db.Char(26)
  plantID Int
  treatmentType String
  notes String @db.VarChar(300)
  treatmentDate Unsupported("date")
  treatmentRecurrence Int @default(0)

  @@id([userID, plantID])
  user User @relation(fields: [userID], references: [userID], onDelete: Cascade)
  plant Plant @relation(fields: [plantID], references: [plantID], onDelete: Cascade)
}

model Plantation_Plant {
  plantationID Int
  plantID Int

  @@id([plantationID, plantID])
  plantation Plantation @relation(fields: [plantationID], references: [plantationID], onDelete: Cascade)
  plant Plant @relation(fields: [plantID], references: [plantID], onDelete: Cascade)
}